{"version":3,"file":"WebMonetizeRedisStore.js","sourceRoot":"","sources":["../../../../src/lib/stores/WebMonetizeStore/WebMonetizeRedisStore.ts"],"names":[],"mappings":";;AAAA,MAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,mDAAmD,CAAC,CAAC;AAG3F,yDAAqE;AAErE,MAAa,qBAAsB,SAAQ,mCAAgB;IACzD,YAA+B,KAAU;QACvC,KAAK,EAAE,CAAC;QADqB,UAAK,GAAL,KAAK,CAAK;IAEzC,CAAC;IAED,KAAK,CAAC,IAAI;QACR,KAAK,CAAC,8BAA8B,CAAC,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,KAAK;QACT,KAAK,CAAC,+BAA+B,CAAC,CAAC;IACzC,CAAC;IAED,SAAS,CAAC,GAAG;QACX,OAAO,gBAAgB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,GAAW;QACvB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,cAAc,KAAK,IAAI;YAAE,OAAO,IAAI,CAAC;QACzC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,GAAW,EAAE,KAAoB;QAC7C,IAAI,CAAC,GAAG;YAAE,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACzD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACnE,CAAC;CACF;AA9BD,sDA8BC","sourcesContent":["const debug = require(\"debug-logger\")(\"Web-Monetization-Middleware:WebMonetizeRedisStore\");\n\nimport Redis from \"ioredis\";\nimport { WebMonetizeStore, MonetizeEntry } from \"./WebMonetizeStore\";\n\nexport class WebMonetizeRedisStore extends WebMonetizeStore {\n  constructor(protected readonly redis: any) {\n    super();\n  }\n\n  async open() {\n    debug(\"not implement open operation\");\n  }\n\n  async close() {\n    debug(\"not implement close operation\");\n  }\n\n  getItemId(key) {\n    return `WEB-MONETIZE-${key}`;\n  }\n\n  async getItem(key: string) {\n    const itemId = this.getItemId(key);\n    const itemJsonString = await this.redis.get(itemId);\n    if (itemJsonString === null) return null;\n    const item = JSON.parse(itemJsonString);\n    return item;\n  }\n\n  async putItem(key: string, entry: MonetizeEntry) {\n    if (!key) throw new Error(\"key is not included in item\");\n    const itemId = this.getItemId(key);\n    await this.redis.set(itemId, JSON.stringify(entry), \"ex\", 86400); // 1day\n  }\n}\n"]}