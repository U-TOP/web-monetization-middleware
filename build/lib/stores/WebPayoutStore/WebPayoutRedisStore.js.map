{"version":3,"file":"WebPayoutRedisStore.js","sourceRoot":"","sources":["../../../../src/lib/stores/WebPayoutStore/WebPayoutRedisStore.ts"],"names":[],"mappings":";;AAAA,MAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,iDAAiD,CAAC,CAAC;AAGzF,qDAA+D;AAE/D,MAAa,mBAAoB,SAAQ,+BAAc;IACrD,YAA+B,KAAU;QACvC,KAAK,EAAE,CAAC;QADqB,UAAK,GAAL,KAAK,CAAK;IAEzC,CAAC;IAED,KAAK,CAAC,IAAI;QACR,KAAK,CAAC,8BAA8B,CAAC,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,KAAK;QACT,KAAK,CAAC,+BAA+B,CAAC,CAAC;IACzC,CAAC;IAED,SAAS,CAAC,GAAG;QACX,OAAO,cAAc,GAAG,EAAE,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,GAAW;QACvB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,cAAc,KAAK,IAAI;YAAE,OAAO,IAAI,CAAC;QACzC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,GAAW,EAAE,KAAkB;QAC3C,IAAI,CAAC,GAAG;YAAE,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACzD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACtD,CAAC;CACF;AA9BD,kDA8BC","sourcesContent":["const debug = require(\"debug-logger\")(\"Web-Monetization-Middleware:WebPayoutRedisStore\");\n\nimport Redis from \"ioredis\";\nimport { WebPayoutStore, PayoutEntry } from \"./WebPayoutStore\";\n\nexport class WebPayoutRedisStore extends WebPayoutStore {\n  constructor(protected readonly redis: any) {\n    super();\n  }\n\n  async open() {\n    debug(\"not implement open operation\");\n  }\n\n  async close() {\n    debug(\"not implement close operation\");\n  }\n\n  getItemId(key) {\n    return `WEB-PAYOUT-${key}`;\n  }\n\n  async getItem(key: string) {\n    const itemId = this.getItemId(key);\n    const itemJsonString = await this.redis.get(itemId);\n    if (itemJsonString === null) return null;\n    const item = JSON.parse(itemJsonString);\n    return item;\n  }\n\n  async putItem(key: string, entry: PayoutEntry) {\n    if (!key) throw new Error(\"key is not included in item\");\n    const itemId = this.getItemId(key);\n    await this.redis.set(itemId, JSON.stringify(entry));\n  }\n}\n"]}